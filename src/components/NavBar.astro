---
import CustomBrandButton from '../components/CustomBrandButton.astro';

const navLinks = [
	{ href: '/sobre-mi', text: 'Sobre Mí' },
	{ href: '/servicios', text: 'Servicios' },
	{ href: '/testimonios', text: 'Testimonios' },
	{ href: '/blog', text: 'Blog' },
	{ href: '/contacto', text: 'Contacto' },
];
---

<nav role="navigation" class="bg-bars relative rounded shadow-md">
	<div class="flex items-center justify-between p-2 lg:px-2 xl:py-0">
		<div>
			{/* Logo Móvil */}
			<a href="/" aria-label="Ir a la página de inicio">
				<img
					src="/icons/logoMobil.svg"
					width={32}
					height={40}
					alt="Logo de la empresa"
					class="rounded xl:hidden"
				/>
			</a>

			{/* Logo Desktop */}
			<a href="/" aria-label="Ir a la página de inicio">
				<img
					src="/icons/logo.svg"
					width={220}
					height={80}
					alt="Logo de la empresa"
					class="hidden rounded xl:inline-block"
				/>
			</a>
		</div>

		{/* Menú Desktop */}
		<div class="hidden gap-4 xl:flex">
			<ul
				class="flex gap-4 rounded p-4 text-center transition-all duration-300"
			>
				{
					navLinks.map((link) => (
						<li>
							<a href={link.href} class="nav-link">
								{link.text}
							</a>
						</li>
					))
				}
			</ul>
		</div>

		<div>
			{/* Botón de menú hamburguesa */}
			<button
				id="toggleMenuBtn"
				class="bg-brandPrimary flex h-8 w-8 cursor-pointer items-center justify-center rounded xl:hidden"
				aria-label="Abrir menú de navegación"
				aria-controls="menu-hamburguer"
			>
				<img
					src="/icons/menu_24dp_FFFFFF_FILL0_wght400_GRAD0_opsz24.svg"
					width={32}
					height={32}
					class="p-[10%]"
					alt="Menú"
				/>
			</button>

			{/* Botón de llamada a la acción (Desktop) */}
			<div class="hidden xl:inline-block">
				<CustomBrandButton btnText="Agenda tu cita" btnLink="/contacto" />
			</div>
		</div>
	</div>

	{/* Menú Hamburguesa (Móvil) */}
	<ul
		id="menu-hamburguer"
		class="pointer-events-none absolute right-0 z-10 mt-4 flex flex-col gap-4 rounded bg-neutral-200 p-4 text-end opacity-0 shadow-lg transition-all duration-300"
	>
		{
			navLinks.map((link) => (
				<li>
					<a href={link.href} class="nav-link">
						{link.text}
					</a>
				</li>
			))
		}
		<li>
			<CustomBrandButton btnText="Agenda tu cita" btnLink="/contacto" />
		</li>
	</ul>
</nav>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const toggleMenuBtn = document.getElementById('toggleMenuBtn');
		const menu = document.getElementById('menu-hamburguer');

		if (!toggleMenuBtn || !menu) {
			console.error('No se encontraron los elementos del menú.');
			return;
		}

		// Función para abrir/cerrar el menú
		function toggleMenu() {
			if (menu) {
				// Añadir comprobación de nullidad para `menu`
				menu.classList.toggle('opacity-100');
				menu.classList.toggle('pointer-events-auto');
				menu.classList.toggle('opacity-0');
				menu.classList.toggle('pointer-events-none');
			}
		}

		// Evento para el botón de menú
		toggleMenuBtn.addEventListener('click', toggleMenu);

		// Cerrar el menú cuando se haga clic en un enlace
		menu.querySelectorAll('a').forEach((link) => {
			link.addEventListener('click', () => {
				menu.classList.add('opacity-0', 'pointer-events-none');
				menu.classList.remove('opacity-100', 'pointer-events-auto');
			});
		});

		document.addEventListener('click', (event) => {
			const target = event.target;

			if (target instanceof Node) {
				// Verificar que target es un Node
				if (!(menu.contains(target) || toggleMenuBtn.contains(target))) {
					menu.classList.add('opacity-0', 'pointer-events-none');
					menu.classList.remove('opacity-100', 'pointer-events-auto');
				}
			}
		});
	});
</script>
